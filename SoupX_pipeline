install.packages("SoupX")
library(SoupX)
library(Seurat)
library(dplyr)
library(tidyverse)
library(data.table)

samples <- c("HPAP-019","HPAP-020","HPAP-021","HPAP-022","HPAP-023","HPAP-024","HPAP-026","HPAP-027","HPAP-028","HPAP-029","HPAP-032","HPAP-034","HPAP-035","HPAP-036","HPAP-037","HPAP-038", "HPAP-039", "HPAP-040", "HPAP-042","HPAP-043","HPAP-044", "HPAP-045", "HPAP-047","HPAP-049", "HPAP-050","HPAP-052", "HPAP-053", "HPAP-054", "HPAP-055", "HPAP-056","HPAP-059","HPAP-063","HPAP-064","HPAP-071","HPAP-072","HPAP-074","HPAP-075","HPAP-077","HPAP-080","HPAP-082","HPAP-084","HPAP-087","HPAP-092","HPAP-093","HPAP-099","HPAP-101","HPAP-103","HPAP-104","HPAP-105", "HPAP-107")

for (sample in samples){
    wd <- sprintf('/path/to/data/here/Upenn_scRNAseq/cellranger_RME/%s/outs', samples)
    }
    
inputdata.10x <- Read10X_h5(file.path(wd, 'raw_feature_bc_matrix.h5'))

rna_counts <- inputdata.10x
data <- CreateSeuratObject(counts=rna_counts)
data[['percent.mt']] <- PercentageFeatureSet(data, pattern = '^MT-')

#Filter RNA by nFeatures (500 < nFeature < 4000)
data <- subset(x = data, subset = nFeature_RNA > 500)
data <- subset(x = data, subset = nFeature_RNA < 4000)

#Running sctransform takes into account sequencing depth at each cell
#data <- SCTransform(data, vars.to.regress = "percent.mt", verbose = FALSE,return.only.var.genes = FALSE)
#data <- SCTransform(data, verbose = FALSE)

#Log noramlize, alternative to sctransform
data <- NormalizeData(data, normalization.method = "LogNormalize", scale.factor = 10000)
data <- FindVariableFeatures(data, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(data)
data <- ScaleData(data, features = all.genes)
data <- RunPCA(data, verbose = FALSE)
data <- RunUMAP(data, dims = 1:30, verbose = FALSE)
data <- FindNeighbors(data, dims = 1:30, verbose = FALSE)
